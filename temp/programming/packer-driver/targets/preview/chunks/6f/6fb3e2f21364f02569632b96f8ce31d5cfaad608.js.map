{"version":3,"sources":["file:///C:/Users/admin/NewProject_18/assets/External/b3core.0.1.0module.js"],"names":["_cjsLoader","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","b3","VERSION","SUCCESS","FAILURE","RUNNING","ERROR","COMPOSITE","DECORATOR","ACTION","CONDITION","createUUID","s","hexDigits","i","substr","Math","floor","random","uuid","join","Class","baseClass","cls","params","initialize","prototype","constructor","Blackboard","p","_baseMemory","_treeMemory","_getTreeMemory","treeScope","_getNodeMemory","treeMemory","nodeScope","memory","_getMemory","set","key","value","get","Tick","tree","debug","target","blackboard","_openNodes","_nodeCount","_enterNode","node","push","_openNode","_tickNode","_closeNode","pop","_exitNode","BehaviorTree","id","title","description","properties","root","load","data","names","nodes","spec","name","EvalError","parameters","category","children","length","cid","child","dump","stack","tick","state","_execute","lastOpenNodes","currOpenNodes","slice","start","min","_close","BaseNode","_enter","_open","status","_tick","_exit","enter","open","close","exit","Action","__BaseNode_initialize","Composite","z","settings","Decorator","Condition","Sequence","Priority","MemSequence","MemPriority","Inverter","Limiter","__Decorator_initialize","maxLoop","MaxTime","maxTime","startTime","Date","getTime","currTime","Repeater","RepeatUntilFailure","RepeatUntilSuccess","Error","Failer","Runner","Succeeder","Wait","__Action_initialize","endTime","milliseconds","_cjsExports"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;;8BAEDC,Y,GAAe,cAAYC,G;;AACjCF,MAAAA,UAAU,CAACG,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;;AAGC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;AACA,YAAIC,EAAE,GAAG,EAAT;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;;AACCA,UAAAA,EAAE,CAACC,OAAH,GAAe,OAAf;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AACCD,UAAAA,EAAE,CAACE,OAAH,GAAe,CAAf;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AACCF,UAAAA,EAAE,CAACG,OAAH,GAAe,CAAf;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AACCH,UAAAA,EAAE,CAACI,OAAH,GAAe,CAAf;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACCJ,UAAAA,EAAE,CAACK,KAAH,GAAe,CAAf;AAGA;AACD;AACA;AACA;AACA;AACA;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B,EAAoC;AACxC,gBAAIC,MAAM,GAAG,KAAKC,UAAL,CAAgBL,SAAhB,EAA2BG,SAA3B,CAAb;;AACA,mBAAOC,MAAM,CAACG,GAAD,CAAb;AACH,WAHD;;AAKJvC,UAAAA,EAAE,CAAC2B,UAAH,GAAgBA,UAAhB;AAEC,SAvKD;AAuKK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIe,IAAI,GAAG1C,EAAE,CAACoB,KAAH,EAAX;AAEA,cAAIQ,CAAC,GAAGc,IAAI,CAACjB,SAAb;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACJ,UAAF,GAAe,YAAW;AACtB;AACA,iBAAKmB,IAAL,GAAkB,IAAlB;AACA,iBAAKC,KAAL,GAAkB,IAAlB;AACA,iBAAKC,MAAL,GAAkB,IAAlB;AACA,iBAAKC,UAAL,GAAkB,IAAlB,CALsB,CAOtB;;AACA,iBAAKC,UAAL,GAAmB,EAAnB;AACA,iBAAKC,UAAL,GAAmB,CAAnB;AACH,WAVD;AAYA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACKpB,UAAAA,CAAC,CAACqB,UAAF,GAAe,UAASC,IAAT,EAAe;AAC1B,iBAAKF,UAAL;;AACA,iBAAKD,UAAL,CAAgBI,IAAhB,CAAqBD,IAArB,EAF0B,CAI1B;;AACH,WALD;AAOA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACKtB,UAAAA,CAAC,CAACwB,SAAF,GAAc,UAASF,IAAT,EAAe,CACzB;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACKtB,UAAAA,CAAC,CAACyB,SAAF,GAAc,UAASH,IAAT,EAAe,CACzB;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACKtB,UAAAA,CAAC,CAAC0B,UAAF,GAAe,UAASJ,IAAT,EAAe;AAC1B;AACA,iBAAKH,UAAL,CAAgBQ,GAAhB;AACH,WAHD;AAKA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK3B,UAAAA,CAAC,CAAC4B,SAAF,GAAc,UAASN,IAAT,EAAe,CACzB;AACH,WAFD;;AAIJlD,UAAAA,EAAE,CAAC0C,IAAH,GAAUA,IAAV;AAEC,SAzJD;AAyJK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIe,YAAY,GAAGzD,EAAE,CAACoB,KAAH,EAAnB;AAEA,cAAIQ,CAAC,GAAG6B,YAAY,CAAChC,SAArB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEK;AACL;AACA;AACA;AACA;AACA;;AAEK;A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AEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACKlD,UAAAA,CAAC,CAACkE,IAAF,GAAU,UAAShB,IAAT,EAAe,CAAE,CAA3B;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AACKlD,UAAAA,CAAC,CAACkD,IAAF,GAAU,UAASA,IAAT,EAAe,CAAE,CAA3B;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AACKlD,UAAAA,CAAC,CAACmE,KAAF,GAAU,UAASjB,IAAT,EAAe,CAAE,CAA3B;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACKlD,UAAAA,CAAC,CAACoE,IAAF,GAAU,UAASlB,IAAT,EAAe,CAAE,CAA3B;;AAEJ9E,UAAAA,EAAE,CAACuF,QAAH,GAAcA,QAAd;AAEC,SAnQD;AAmQK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIU,MAAM,GAAGjG,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACuF,QAAZ,CAAb;AAEA,cAAI3D,CAAC,GAAGqE,MAAM,CAACxE,SAAf;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAAC2C,QAAF,GAAavE,EAAE,CAACQ,MAAhB;AAEAoB,UAAAA,CAAC,CAACsE,qBAAF,GAA0BtE,CAAC,CAACJ,UAA5B;AACA;AACL;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,YAAW;AACtB,iBAAK0E,qBAAL;AACH,WAFD;;AAIJlG,UAAAA,EAAE,CAACiG,MAAH,GAAYA,MAAZ;AAEC,SA/CD;AA+CK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIE,SAAS,GAAGnG,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACoG,CAAZ,CAAhB;AAEA,cAAIxE,CAAC,GAAGuE,SAAS,CAAC1E,SAAlB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAAC2C,QAAF,GAAavE,EAAE,CAACM,SAAhB;AAEAsB,UAAAA,CAAC,CAACsE,qBAAF,GAA0BtE,CAAC,CAACJ,UAA5B;AACA;AACL;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKH,qBAAL;;AAEA,iBAAK1B,QAAL,GAAgB,CAAC6B,QAAQ,CAAC7B,QAAT,IAAqB,EAAtB,EAA0BW,KAA1B,CAAgC,CAAhC,CAAhB;AACH,WAND;;AAQJnF,UAAAA,EAAE,CAACmG,SAAH,GAAeA,SAAf;AAEC,SAtED;AAsEK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIG,SAAS,GAAGtG,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACuF,QAAZ,CAAhB;AAEA,cAAI3D,CAAC,GAAG0E,SAAS,CAAC7E,SAAlB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAAC2C,QAAF,GAAavE,EAAE,CAACO,SAAhB;AAEAqB,UAAAA,CAAC,CAACsE,qBAAF,GAA0BtE,CAAC,CAACJ,UAA5B;AACA;AACL;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKH,qBAAL;;AAEA,iBAAKvB,KAAL,GAAa0B,QAAQ,CAAC1B,KAAT,IAAkB,IAA/B;AACH,WAND;;AAQJ3E,UAAAA,EAAE,CAACsG,SAAH,GAAeA,SAAf;AAEC,SAvED;AAuEK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,SAAS,GAAGvG,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACuF,QAAZ,CAAhB;AAEA,cAAI3D,CAAC,GAAG2E,SAAS,CAAC9E,SAAlB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAAC2C,QAAF,GAAavE,EAAE,CAACS,SAAhB;AAEAmB,UAAAA,CAAC,CAACsE,qBAAF,GAA0BtE,CAAC,CAACJ,UAA5B;AACA;AACL;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,YAAW;AACtB,iBAAK0E,qBAAL;AACH,WAFD;;AAIJlG,UAAAA,EAAE,CAACuG,SAAH,GAAeA,SAAf;AAEC,SApCD;AAoCK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,QAAQ,GAAGxG,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACmG,SAAZ,CAAf;AAEA,cAAIvE,CAAC,GAAG4E,QAAQ,CAAC/E,SAAjB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,UAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,iBAAK,IAAIjE,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAK2D,QAAL,CAAcC,MAA9B,EAAsC5D,CAAC,EAAvC,EAA2C;AACvC,kBAAI6E,MAAM,GAAG,KAAKlB,QAAL,CAAc3D,CAAd,EAAiBmE,QAAjB,CAA0BF,IAA1B,CAAb;;AAEA,kBAAIY,MAAM,KAAK1F,EAAE,CAACE,OAAlB,EAA2B;AACvB,uBAAOwF,MAAP;AACH;AACJ;;AAED,mBAAO1F,EAAE,CAACE,OAAV;AACH,WAVD;;AAYJF,UAAAA,EAAE,CAACwG,QAAH,GAAcA,QAAd;AAEC,SA7CD;AA6CK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,QAAQ,GAAGzG,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACmG,SAAZ,CAAf;AAEA,cAAIvE,CAAC,GAAG6E,QAAQ,CAAChF,SAAjB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,UAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,iBAAK,IAAIjE,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAK2D,QAAL,CAAcC,MAA9B,EAAsC5D,CAAC,EAAvC,EAA2C;AACvC,kBAAI6E,MAAM,GAAG,KAAKlB,QAAL,CAAc3D,CAAd,EAAiBmE,QAAjB,CAA0BF,IAA1B,CAAb;;AAEA,kBAAIY,MAAM,KAAK1F,EAAE,CAACG,OAAlB,EAA2B;AACvB,uBAAOuF,MAAP;AACH;AACJ;;AAED,mBAAO1F,EAAE,CAACG,OAAV;AACH,WAVD;;AAYJH,UAAAA,EAAE,CAACyG,QAAH,GAAcA,QAAd;AAEC,SA7CD;AA6CK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,WAAW,GAAG1G,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACmG,SAAZ,CAAlB;AAEA,cAAIvE,CAAC,GAAG8E,WAAW,CAACjF,SAApB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,aAAT;AAEA;AACL;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpBA,YAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,cAApB,EAAoC,CAApC,EAAuCwC,IAAI,CAACnC,IAAL,CAAUe,EAAjD,EAAqD,KAAKA,EAA1D;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAIH,KAAK,GAAGG,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,cAApB,EAAoCqC,IAAI,CAACnC,IAAL,CAAUe,EAA9C,EAAkD,KAAKA,EAAvD,CAAZ;;AACA,iBAAK,IAAI7C,CAAC,GAAC8D,KAAX,EAAkB9D,CAAC,GAAC,KAAK2D,QAAL,CAAcC,MAAlC,EAA0C5D,CAAC,EAA3C,EAA+C;AAC3C,kBAAI6E,MAAM,GAAG,KAAKlB,QAAL,CAAc3D,CAAd,EAAiBmE,QAAjB,CAA0BF,IAA1B,CAAb;;AAEA,kBAAIY,MAAM,KAAK1F,EAAE,CAACE,OAAlB,EAA2B;AACvB,oBAAIwF,MAAM,KAAK1F,EAAE,CAACI,OAAlB,EAA2B;AACvB0E,kBAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,cAApB,EAAoCzB,CAApC,EAAuCiE,IAAI,CAACnC,IAAL,CAAUe,EAAjD,EAAqD,KAAKA,EAA1D;AACH;;AACD,uBAAOgC,MAAP;AACH;AACJ;;AAED,mBAAO1F,EAAE,CAACE,OAAV;AACH,WAdD;;AAgBJF,UAAAA,EAAE,CAAC0G,WAAH,GAAiBA,WAAjB;AAEC,SA3DD;AA2DK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,WAAW,GAAG3G,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACmG,SAAZ,CAAlB;AAEA,cAAIvE,CAAC,GAAG+E,WAAW,CAAClF,SAApB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,aAAT;AAEA;AACL;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpBA,YAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,cAApB,EAAoC,CAApC,EAAuCwC,IAAI,CAACnC,IAAL,CAAUe,EAAjD,EAAqD,KAAKA,EAA1D;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAIH,KAAK,GAAGG,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,cAApB,EAAoCqC,IAAI,CAACnC,IAAL,CAAUe,EAA9C,EAAkD,KAAKA,EAAvD,CAAZ;;AACA,iBAAK,IAAI7C,CAAC,GAAC8D,KAAX,EAAkB9D,CAAC,GAAC,KAAK2D,QAAL,CAAcC,MAAlC,EAA0C5D,CAAC,EAA3C,EAA+C;AAC3C,kBAAI6E,MAAM,GAAG,KAAKlB,QAAL,CAAc3D,CAAd,EAAiBmE,QAAjB,CAA0BF,IAA1B,CAAb;;AAEA,kBAAIY,MAAM,KAAK1F,EAAE,CAACG,OAAlB,EAA2B;AACvB,oBAAIuF,MAAM,KAAK1F,EAAE,CAACI,OAAlB,EAA2B;AACvB0E,kBAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,cAApB,EAAoCzB,CAApC,EAAuCiE,IAAI,CAACnC,IAAL,CAAUe,EAAjD,EAAqD,KAAKA,EAA1D;AACH;;AACD,uBAAOgC,MAAP;AACH;AACJ;;AAED,mBAAO1F,EAAE,CAACG,OAAV;AACH,WAdD;;AAgBJH,UAAAA,EAAE,CAAC2G,WAAH,GAAiBA,WAAjB;AAEC,SA3DD;AA2DK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,QAAQ,GAAG5G,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACsG,SAAZ,CAAf;AAEA,cAAI1E,CAAC,GAAGgF,QAAQ,CAACnF,SAAjB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,UAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAI,CAAC,KAAKH,KAAV,EAAiB;AACb,qBAAO3E,EAAE,CAACK,KAAV;AACH;;AAED,gBAAIqF,MAAM,GAAG,KAAKf,KAAL,CAAWK,QAAX,CAAoBF,IAApB,CAAb;;AAEA,gBAAIY,MAAM,IAAI1F,EAAE,CAACE,OAAjB,EACIwF,MAAM,GAAG1F,EAAE,CAACG,OAAZ,CADJ,KAEK,IAAIuF,MAAM,IAAI1F,EAAE,CAACG,OAAjB,EACDuF,MAAM,GAAG1F,EAAE,CAACE,OAAZ;AAEJ,mBAAOwF,MAAP;AACH,WAbD;;AAeJ1F,UAAAA,EAAE,CAAC4G,QAAH,GAAcA,QAAd;AAEC,SA/CD;AA+CK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,OAAO,GAAG7G,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACsG,SAAZ,CAAd;AAEA,cAAI1E,CAAC,GAAGiF,OAAO,CAACpF,SAAhB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,SAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAAC0C,UAAF,GAAe;AAAC,uBAAW;AAAZ,WAAf;AAEA1C,UAAAA,CAAC,CAACkF,sBAAF,GAA2BlF,CAAC,CAACJ,UAA7B;AACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKS,sBAAL,CAA4BT,QAA5B;;AAEA,gBAAI,CAACA,QAAQ,CAACU,OAAd,EAAuB;AACnB,oBAAM,6DACA,WADN;AAEH;;AAED,iBAAKA,OAAL,GAAeV,QAAQ,CAACU,OAAxB;AACH,WAXD;AAaA;AACL;AACA;AACA;AACA;AACA;;;AACKnF,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpB;AACA,gBAAIjE,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,GAApB,EAAwBqC,IAAI,CAACnC,IAAL,CAAUe,EAAlC,EAAsC,KAAKA,EAA3C,CAAR;;AACA,gBAAG,CAAC7C,CAAJ,EAAM;AACFiE,cAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyB,CAAzB,EAA4BwC,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C;AACH;AACJ,WAND;AAQA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAI,CAAC,KAAKH,KAAV,EAAiB;AACb,qBAAO3E,EAAE,CAACK,KAAV;AACH;;AAED,gBAAIQ,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,GAApB,EAAyBqC,IAAI,CAACnC,IAAL,CAAUe,EAAnC,EAAuC,KAAKA,EAA5C,CAAR;;AAEA,gBAAI7C,CAAC,GAAG,KAAKkG,OAAb,EAAsB;AAClB,kBAAIrB,MAAM,GAAG,KAAKf,KAAL,CAAWK,QAAX,CAAoBF,IAApB,CAAb;;AAEA,kBAAIY,MAAM,IAAI1F,EAAE,CAACE,OAAb,IAAwBwF,MAAM,IAAI1F,EAAE,CAACG,OAAzC,EACI2E,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyBzB,CAAC,GAAC,CAA3B,EAA8BiE,IAAI,CAACnC,IAAL,CAAUe,EAAxC,EAA4C,KAAKA,EAAjD;AAEJ,qBAAOgC,MAAP;AACH;;AAED,mBAAO1F,EAAE,CAACG,OAAV;AACH,WAjBD;;AAmBJH,UAAAA,EAAE,CAAC6G,OAAH,GAAaA,OAAb;AAEC,SArGD;AAqGK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIG,OAAO,GAAGhH,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACsG,SAAZ,CAAd;AAEA,cAAI1E,CAAC,GAAGoF,OAAO,CAACvF,SAAhB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,SAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAAC+B,KAAF,GAAU,UAAV;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACK/B,UAAAA,CAAC,CAAC0C,UAAF,GAAe;AAAC,uBAAW;AAAZ,WAAf;AAEA1C,UAAAA,CAAC,CAACkF,sBAAF,GAA2BlF,CAAC,CAACJ,UAA7B;AACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKS,sBAAL,CAA4BT,QAA5B;;AAEA,gBAAI,CAACA,QAAQ,CAACY,OAAd,EAAuB;AACnB,oBAAM,6DACA,WADN;AAEH;;AAED,iBAAKA,OAAL,GAAeZ,QAAQ,CAACY,OAAxB;AACH,WAXD;AAaA;AACL;AACA;AACA;AACA;AACA;;;AACKrF,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpB,gBAAIoC,SAAS,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAhB;AACAtC,YAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,WAApB,EAAiC4E,SAAjC,EAA4CpC,IAAI,CAACnC,IAAL,CAAUe,EAAtD,EAA0D,KAAKA,EAA/D;AACH,WAHD;AAKA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAI,CAAC,KAAKH,KAAV,EAAiB;AACb,qBAAO3E,EAAE,CAACK,KAAV;AACH;;AAED,gBAAIgH,QAAQ,GAAI,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACA,gBAAIF,SAAS,GAAGpC,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,WAApB,EAAiCqC,IAAI,CAACnC,IAAL,CAAUe,EAA3C,EAA+C,KAAKA,EAApD,CAAhB;;AAEA,gBAAIgC,MAAM,GAAG,KAAKf,KAAL,CAAWK,QAAX,CAAoBF,IAApB,CAAb;;AACA,gBAAIuC,QAAQ,GAAGH,SAAX,GAAuB,KAAKD,OAAhC,EAAyC;AACrC,qBAAOjH,EAAE,CAACG,OAAV;AACH;;AAED,mBAAOuF,MAAP;AACH,WAdD;;AAgBJ1F,UAAAA,EAAE,CAACgH,OAAH,GAAaA,OAAb;AAEC,SAxGD;AAwGK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIM,QAAQ,GAAGtH,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACsG,SAAZ,CAAf;AAEA,cAAI1E,CAAC,GAAG0F,QAAQ,CAAC7F,SAAjB;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,UAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAAC0C,UAAF,GAAe;AAAC,uBAAW,CAAC;AAAb,WAAf;AAEA1C,UAAAA,CAAC,CAACkF,sBAAF,GAA2BlF,CAAC,CAACJ,UAA7B;AACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKS,sBAAL,CAA4BT,QAA5B;;AAEA,iBAAKU,OAAL,GAAeV,QAAQ,CAACU,OAAT,IAAoB,CAAC,CAApC;AACH,WAND;AAQA;AACL;AACA;AACA;AACA;AACA;;;AACKnF,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpBA,YAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyB,CAAzB,EAA4BwC,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAI,CAAC,KAAKH,KAAV,EAAiB;AACb,qBAAO3E,EAAE,CAACK,KAAV;AACH;;AAED,gBAAIQ,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,GAApB,EAAyBqC,IAAI,CAACnC,IAAL,CAAUe,EAAnC,EAAuC,KAAKA,EAA5C,CAAR;AACA,gBAAIgC,MAAM,GAAG1F,EAAE,CAACE,OAAhB;;AAEA,mBAAO,KAAK6G,OAAL,GAAe,CAAf,IAAoBlG,CAAC,GAAG,KAAKkG,OAApC,EAA6C;AACzCrB,cAAAA,MAAM,GAAG,KAAKf,KAAL,CAAWK,QAAX,CAAoBF,IAApB,CAAT;AAEA,kBAAIY,MAAM,IAAI1F,EAAE,CAACE,OAAb,IAAwBwF,MAAM,IAAI1F,EAAE,CAACG,OAAzC,EACIU,CAAC,GADL,KAGI;AACP;;AAEDA,YAAAA,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyBzB,CAAzB,EAA4BiE,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C,CAAJ;AACA,mBAAOgC,MAAP;AACH,WAnBD;;AAqBJ1F,UAAAA,EAAE,CAACsH,QAAH,GAAcA,QAAd;AAEC,SA9FD;AA8FK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,kBAAkB,GAAGvH,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACsG,SAAZ,CAAzB;AAEA,cAAI1E,CAAC,GAAG2F,kBAAkB,CAAC9F,SAA3B;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,oBAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAAC+B,KAAF,GAAU,sBAAV;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACK/B,UAAAA,CAAC,CAAC0C,UAAF,GAAe;AAAC,uBAAW,CAAC;AAAb,WAAf;AAEA1C,UAAAA,CAAC,CAACkF,sBAAF,GAA2BlF,CAAC,CAACJ,UAA7B;AACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKS,sBAAL,CAA4BT,QAA5B;;AAEA,iBAAKU,OAAL,GAAeV,QAAQ,CAACU,OAAT,IAAoB,CAAC,CAApC;AACH,WAND;AAQA;AACL;AACA;AACA;AACA;AACA;;;AACKnF,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpBA,YAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyB,CAAzB,EAA4BwC,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAI,CAAC,KAAKH,KAAV,EAAiB;AACb,qBAAO3E,EAAE,CAACK,KAAV;AACH;;AAED,gBAAIQ,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,GAApB,EAAyBqC,IAAI,CAACnC,IAAL,CAAUe,EAAnC,EAAuC,KAAKA,EAA5C,CAAR;;AAEA,mBAAO,KAAKqD,OAAL,GAAe,CAAf,IAAoBlG,CAAC,GAAG,KAAKkG,OAApC,EAA6C;AACzC,kBAAIrB,MAAM,GAAG,KAAKf,KAAL,CAAWK,QAAX,CAAoBF,IAApB,CAAb;;AAEA,kBAAIY,MAAM,IAAI1F,EAAE,CAACE,OAAjB,EACIW,CAAC,GADL,KAGI;AACP;;AAED,gBAAIA,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyBzB,CAAzB,EAA4BiE,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C,CAAR;AACA,mBAAOgC,MAAP;AACH,WAlBD;;AAoBJ1F,UAAAA,EAAE,CAACuH,kBAAH,GAAwBA,kBAAxB;AAEC,SAvGD;AAuGK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,cAAIC,kBAAkB,GAAGxH,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACsG,SAAZ,CAAzB;AAEA,cAAI1E,CAAC,GAAG4F,kBAAkB,CAAC/F,SAA3B;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,oBAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAAC+B,KAAF,GAAU,sBAAV;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACK/B,UAAAA,CAAC,CAAC0C,UAAF,GAAe;AAAC,uBAAW,CAAC;AAAb,WAAf;AAEA1C,UAAAA,CAAC,CAACkF,sBAAF,GAA2BlF,CAAC,CAACJ,UAA7B;AACA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACKI,UAAAA,CAAC,CAACJ,UAAF,GAAe,UAAS6E,QAAT,EAAmB;AAC9BA,YAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;;AAEA,iBAAKS,sBAAL,CAA4BT,QAA5B;;AAEA,iBAAKU,OAAL,GAAeV,QAAQ,CAACU,OAAT,IAAoB,CAAC,CAApC;AACH,WAND;AAQA;AACL;AACA;AACA;AACA;AACA;;;AACKnF,UAAAA,CAAC,CAACkE,IAAF,GAAS,UAAShB,IAAT,EAAe;AACpBA,YAAAA,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyB,CAAzB,EAA4BwC,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C;AACH,WAFD;AAIA;AACL;AACA;AACA;AACA;AACA;AACA;;;AACK9B,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,gBAAI,CAAC,KAAKH,KAAV,EAAiB;AACb,qBAAO3E,EAAE,CAACK,KAAV;AACH;;AAED,gBAAIQ,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBL,GAAhB,CAAoB,GAApB,EAAyBqC,IAAI,CAACnC,IAAL,CAAUe,EAAnC,EAAuC,KAAKA,EAA5C,CAAR;;AAEA,mBAAO,KAAKqD,OAAL,GAAe,CAAf,IAAoBlG,CAAC,GAAG,KAAKkG,OAApC,EAA6C;AACzC,kBAAIrB,MAAM,GAAG,KAAKf,KAAL,CAAWK,QAAX,CAAoBF,IAApB,CAAb;;AAEA,kBAAIY,MAAM,IAAI1F,EAAE,CAACG,OAAjB,EACIU,CAAC,GADL,KAGI;AACP;;AAED,gBAAIA,CAAC,GAAGiE,IAAI,CAAChC,UAAL,CAAgBR,GAAhB,CAAoB,GAApB,EAAyBzB,CAAzB,EAA4BiE,IAAI,CAACnC,IAAL,CAAUe,EAAtC,EAA0C,KAAKA,EAA/C,CAAR;AACA,mBAAOgC,MAAP;AACH,WAlBD;;AAoBJ1F,UAAAA,EAAE,CAACwH,kBAAH,GAAwBA,kBAAxB;AAEC,SAvGD;AAuGK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,cAAIC,KAAK,GAAGzH,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACiG,MAAZ,CAAZ;AAEA,cAAIrE,CAAC,GAAG6F,KAAK,CAAChG,SAAd;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,OAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,mBAAO9E,EAAE,CAACK,KAAV;AACH,WAFD;;AAIJL,UAAAA,EAAE,CAACyH,KAAH,GAAWA,KAAX;AAEC,SAnCD;AAmCK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,cAAIC,MAAM,GAAG1H,EAAE,CAACoB,KAAH,CAASpB,EAAE,CAACiG,MAAZ,CAAb;AAEA,cAAIrE,CAAC,GAAG8F,MAAM,CAACjG,SAAf;AAEI;AACL;AACA;AACA;AACA;AACA;AACA;;AACKG,UAAAA,CAAC,CAACwC,IAAF,GAAS,QAAT;AAEA;AACL;AACA;AACA;AACA;AACA;AACA;;AACKxC,UAAAA,CAAC,CAACkD,IAAF,GAAS,UAASA,IAAT,EAAe;AACpB,mBAAO9E,EAAE,CAACG,OAAV;AACH,WAFD;;AAIJH,UAAAA,EAAE,CAAC0H,MAAH,GAAYA,MAAZ;AAEC,SAnCD;AAmCK;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AAEC;AACA;;;AAEA,SAAC,YAAW;AACZ;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,cAAIC,MAAM,GAAG3H,EAAE,CAACoB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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nlet _cjsExports;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n /**\n  * b3\n  * \n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n //this.b3 = this.b3 || {};\n let b3 = {};\n\n /**\n  * Behavior3JS\n  * ===========\n  *\n  * * * *\n  * \n  * **Behavior3JS** is a Behavior Tree library written in JavaScript. It \n  * provides structures and algorithms that assist you in the task of creating \n  * intelligent agents for your game or application. Check it out some features \n  * of Behavior3JS:\n  * \n  * - Based on the work of (Marzinotto et al., 2014), in which they propose a \n  *   **formal**, **consistent** and **general** definition of Behavior Trees;\n  * - **Optimized to control multiple agents**: you can use a single behavior \n  *   tree instance to handle hundreds of agents;\n  * - It was **designed to load and save trees in a JSON format**, in order to \n  *   use, edit and test it in multiple environments, tools and languages;\n  * - A **cool visual editor** which you can access online;\n  * - Several **composite, decorator and action nodes** available within the \n  *   library. You still can define your own nodes, including composites and \n  *   decorators;\n  * - **Completely free**, the core module and the visual editor are all published\n  *   under the MIT License, which means that you can use them for your open source\n  *   and commercial projects;\n  * - **Lightweight**, only 11.5KB!\n  * \n  * Visit http://behavior3js.guineashots.com to know more!\n  *\n  * \n  * Core Classes and Functions\n  * --------------------------\n  * \n  * This library include the following core structures...\n  *\n  * **Public:**\n  * \n  * - **BehaviorTree**: the structure that represents a Behavior Tree;\n  * - **Blackboard**: represents a \"memory\" in an agent and is required to to \n  *   run a `BehaviorTree`;\n  * - **Composite**: base class for all composite nodes;\n  * - **Decorator**: base class for all decorator nodes;\n  * - **Action**: base class for all action nodes;\n  * - **Condition**: base class for all condition nodes;\n  *\n  * **Internal:**\n  * \n  * \n  * - **Tick**: used as container and tracking object through the tree during \n  *   the tick signal;\n  * - **BaseNode**: the base class that provide all common node features;\n  * \n  * *Some classes are used internally on Behavior3JS, but you may need to access\n  * its functionalities eventually, specially the `Tick` object.*\n  *\n  * \n  * Nodes Included \n  * --------------\n  *\n  * **Composite Nodes**: \n  * \n  * - Sequence;\n  * - Priority;\n  * - MemSequence;\n  * - MemPriority;\n  * \n  * \n  * **Decorators**: \n  * \n  * - Inverter;\n  * - Limiter\n  * - MaxTime;\n  * - Repeater;\n  * - RepeaterUntilFailure;\n  * - RepeaterUntilSuccess;\n  *\n  * \n  * **Actions**:\n  * \n  * - Succeeder;\n  * - Failer;\n  * - Error;\n  * - Runner;\n  * - Wait.\n  * \n  * @module Behavior3JS\n  * @main Behavior3JS\n **/\n\n (function() {\n \"use strict\";\n\n /**\n  * List of all constants in Behavior3JS.\n  *\n  * @class Constants\n **/\n\n /**\n  * Version of the library.\n  * \n  * @property VERSION\n  * @type {String}\n  */\n b3.VERSION   = '0.1.0';\n\n /**\n  * Returned when a criterion has been met by a condition node or an action node\n  * has been completed successfully.\n  * \n  * @property SUCCESS\n  * @type {Integer}\n  */\n b3.SUCCESS   = 1;\n\n /**\n  * Returned when a criterion has not been met by a condition node or an action \n  * node could not finish its execution for any reason.\n  * \n  * @property FAILURE\n  * @type {Integer}\n  */\n b3.FAILURE   = 2;\n\n /**\n  * Returned when an action node has been initialized but is still waiting the \n  * its resolution.\n  * \n  * @property FAILURE\n  * @type {Integer}\n  */\n b3.RUNNING   = 3;\n\n /**\n  * Returned when some unexpected error happened in the tree, probably by a \n  * programming error (trying to verify an undefined variable). Its use depends \n  * on the final implementation of the leaf nodes.\n  * \n  * @property ERROR\n  * @type {Integer}\n  */\n b3.ERROR     = 4;\n\n\n /**\n  * Describes the node category as Composite.\n  * \n  * @property COMPOSITE\n  * @type {String}\n  */\n b3.COMPOSITE = 'composite';\n\n /**\n  * Describes the node category as Decorator.\n  * \n  * @property DECORATOR\n  * @type {String}\n  */\n b3.DECORATOR = 'decorator';\n\n /**\n  * Describes the node category as Action.\n  * \n  * @property ACTION\n  * @type {String}\n  */\n b3.ACTION    = 'action';\n\n /**\n  * Describes the node category as Condition.\n  * \n  * @property CONDITION\n  * @type {String}\n  */\n b3.CONDITION = 'condition';\n\n\n /**\n  * List of internal and helper functions in Behavior3JS.\n  * \n  * @class Utils\n **/\n\n\n /**\n  * This function is used to create unique IDs for trees and nodes.\n  * \n  * (consult http://www.ietf.org/rfc/rfc4122.txt).\n  *\n  * @method createUUID\n  * @return {String} A unique ID.\n **/\n b3.createUUID = function() {\n     var s = [];\n     var hexDigits = \"0123456789abcdef\";\n     for (var i = 0; i < 36; i++) {\n         s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n     }\n     // bits 12-15 of the time_hi_and_version field to 0010\n     s[14] = \"4\";\n\n     // bits 6-7 of the clock_seq_hi_and_reserved to 01\n     s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n\n     s[8] = s[13] = s[18] = s[23] = \"-\";\n\n     var uuid = s.join(\"\");\n     return uuid;\n }\n\n /**\n  * Class is a meta-factory function to create classes in JavaScript. It is a\n  * shortcut for the CreateJS syntax style. By default, the class created by \n  * this function have an initialize function (the constructor). Optionally, you\n  * can specify the inheritance by passing another class as parameter.\n  *\n  * By default, all classes created using this function, may receives only a\n  * settings parameter as argument. This pattern is commonly used by jQuery and \n  * its plugins.\n  *\n  * Usage\n  * -----\n  *\n  *     // Creating a simple class\n  *     var BaseClass = b3.Class();\n  *\n  *     // Using inheritance\n  *     var ChildClass = b3.Class(BaseClass);\n  *\n  *     // Defining the constructor\n  *     ChildClass.prototype.initialize = function(settings) { ... }\n  *\n  * @method Class\n  * @param {Object} [baseClass] The super class.\n  * @return {Object} A new class.\n **/\n b3.Class = function(baseClass) {\n     // create a new class\n     var cls = function(params) {\n         this.initialize(params);\n     }\n     \n     // if base class is provided, inherit\n     if (baseClass) {\n         cls.prototype = new baseClass();\n         cls.prototype.constructor = cls;\n     }\n     \n     // create initialize if does not exist on baseClass\n     cls.prototype.initialize = cls.prototype.initialize || function() {};\n\n     return cls;\n }\n\n })();/**\n  * Blackboard\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * The Blackboard is the memory structure required by `BehaviorTree` and its \n  * nodes. It only have 2 public methods: `set` and `get`. These methods works \n  * in 3 different contexts: global, per tree, and per node per tree.\n  * \n  * Suppose you have two different trees controlling a single object with a \n  * single blackboard, then:\n  *\n  * - In the global context, all nodes will access the stored information. \n  * - In per tree context, only nodes sharing the same tree share the stored \n  *   information.\n  * - In per node per tree context, the information stored in the blackboard can\n  *   only be accessed by the same node that wrote the data.\n  *   \n  * The context is selected indirectly by the parameters provided to these \n  * methods, for example:\n  * \n  *     // getting/setting variable in global context\n  *     blackboard.set('testKey', 'value');\n  *     var value = blackboard.get('testKey');\n  *     \n  *     // getting/setting variable in per tree context\n  *     blackboard.set('testKey', 'value', tree.id);\n  *     var value = blackboard.get('testKey', tree.id);\n  *     \n  *     // getting/setting variable in per node per tree context\n  *     blackboard.set('testKey', 'value', tree.id, node.id);\n  *     var value = blackboard.get('testKey', tree.id, node.id);\n  * \n  * Note: Internally, the blackboard store these memories in different objects,\n  *  being the global on `_baseMemory`, the per tree on `_treeMemory` and the \n  *  per node per tree dynamically create inside the per tree memory (it is \n  *  accessed via `_treeMemory[id].nodeMemory`). Avoid to use these variables \n  *  manually, use `get` and `set` instead.\n  *  \n  * @class Blackboard\n **/\n var Blackboard = b3.Class();\n\n var p = Blackboard.prototype;\n\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function() {\n         this._baseMemory = {};\n         this._treeMemory = {};\n     }\n\n     /**\n      * Internal method to retrieve the tree context memory. If the memory does\n      * not exist, this method creates it.\n      *\n      * @method _getTreeMemory\n      * @param {string} treeScope The id of the tree in scope.\n      * @returns {Object} The tree memory.\n      * @protected\n     **/\n     p._getTreeMemory = function(treeScope) {\n         if (!this._treeMemory[treeScope]) {\n             this._treeMemory[treeScope] = {\n                 'nodeMemory'         : {},\n                 'openNodes'          : [],\n                 'traversalDepth'     : 0,\n                 'traversalCycle'     : 0,\n             };\n         }\n         return this._treeMemory[treeScope];\n     };\n\n     /**\n      * Internal method to retrieve the node context memory, given the tree \n      * memory. If the memory does not exist, this method creates is.\n      *\n      * @method _getNodeMemory\n      * @param {String} treeMemory the tree memory.\n      * @param {String} nodeScope The id of the node in scope.\n      * @returns {Object} The node memory.\n      * @protected\n     **/\n     p._getNodeMemory = function(treeMemory, nodeScope) {\n         var memory = treeMemory['nodeMemory'];\n         if (!memory[nodeScope]) {\n             memory[nodeScope] = {};\n         }\n\n         return memory[nodeScope];\n     };\n\n     /**\n      * Internal method to retrieve the context memory. If treeScope and \n      * nodeScope are provided, this method returns the per node per tree \n      * memory. If only the treeScope is provided, it returns the per tree \n      * memory. If no parameter is provided, it returns the global memory. \n      * Notice that, if only nodeScope is provided, this method will still \n      * return the global memory.\n      *\n      * @method _getMemory\n      * @param {String} treeScope The id of the tree scope.\n      * @param {String} nodeScope The id of the node scope.\n      * @returns {Object} A memory object.\n      * @protected\n     **/\n     p._getMemory = function(treeScope, nodeScope) {\n         var memory = this._baseMemory;\n\n         if (treeScope) {\n             memory = this._getTreeMemory(treeScope);\n\n             if (nodeScope) {\n                 memory = this._getNodeMemory(memory, nodeScope);\n             }\n         }\n\n         return memory;\n     };\n\n     /**\n      * Stores a value in the blackboard. If treeScope and nodeScope are \n      * provided, this method will save the value into the per node per tree \n      * memory. If only the treeScope is provided, it will save the value into \n      * the per tree memory. If no parameter is provided, this method will save \n      * the value into the global memory. Notice that, if only nodeScope is \n      * provided (but treeScope not), this method will still save the value into\n      * the global memory.\n      *\n      * @method set\n      * @param {String} key The key to be stored.\n      * @param {String} value The value to be stored.\n      * @param {String} treeScope The tree id if accessing the tree or node \n      *                           memory.\n      * @param {String} nodeScope The node id if accessing the node memory.\n     **/\n     p.set = function(key, value, treeScope, nodeScope) {\n         var memory = this._getMemory(treeScope, nodeScope);\n         memory[key] = value;\n     };\n\n     /**\n      * Retrieves a value in the blackboard. If treeScope and nodeScope are\n      * provided, this method will retrieve the value from the per node per tree\n      * memory. If only the treeScope is provided, it will retrieve the value\n      * from the per tree memory. If no parameter is provided, this method will\n      * retrieve from the global memory. If only nodeScope is provided (but\n      * treeScope not), this method will still try to retrieve from the global\n      * memory.\n      *\n      * @method get\n      * @param {String} key The key to be retrieved.\n      * @param {String} treeScope The tree id if accessing the tree or node \n      *                           memory.\n      * @param {String} nodeScope The node id if accessing the node memory.\n      * @returns {Object} The value stored or undefined.\n     **/\n     p.get = function(key, treeScope, nodeScope) {\n         var memory = this._getMemory(treeScope, nodeScope);\n         return memory[key];\n     };\n     \n b3.Blackboard = Blackboard;\n\n })();/**\n  * Tick\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * A new Tick object is instantiated every tick by BehaviorTree. It is passed \n  * as parameter to the nodes through the tree during the traversal.\n  * \n  * The role of the Tick class is to store the instances of tree, debug, target\n  * and blackboard. So, all nodes can access these informations.\n  * \n  * For internal uses, the Tick also is useful to store the open node after the \n  * tick signal, in order to let `BehaviorTree` to keep track and close them \n  * when necessary.\n  *\n  * This class also makes a bridge between nodes and the debug, passing the node\n  * state to the debug if the last is provided.\n  *\n  * @class Tick\n **/\n var Tick = b3.Class();\n\n var p = Tick.prototype;\n\n     /**\n      * The tree reference.\n      * \n      * @property tree\n      * @type {b3.BehaviorTree}\n      * @readOnly\n      */\n     \n     /**\n      * The debug reference.\n      * \n      * @property debug\n      * @type {Object}\n      * @readOnly\n      */\n     \n     /**\n      * The target object reference.\n      * \n      * @property target\n      * @type {Object}\n      * @readOnly\n      */\n     \n     /**\n      * The blackboard reference.\n      * \n      * @property blackboard\n      * @type {Blackboard}\n      * @readOnly\n      */\n     \n     /**\n      * The list of open nodes. Update during the tree traversal.\n      * \n      * @property _openNodes\n      * @type {Array}\n      * @protected\n      * @readOnly\n      */\n     \n     /**\n      * The number of nodes entered during the tick. Update during the tree \n      * traversal.\n      * \n      * @property _nodeCount\n      * @type {Integer}\n      * @protected\n      * @readOnly\n      */\n     \n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function() {\n         // set by BehaviorTree\n         this.tree       = null;\n         this.debug      = null;\n         this.target     = null;\n         this.blackboard = null;\n\n         // updated during the tick signal\n         this._openNodes  = [];\n         this._nodeCount  = 0;\n     }\n\n     /**\n      * Called when entering a node (called by BaseNode).\n      *\n      * @method _enterNode\n      * @param {Object} node The node that called this method.\n      * @protected\n     **/\n     p._enterNode = function(node) {\n         this._nodeCount++;\n         this._openNodes.push(node);\n\n         // TODO: call debug here\n     }\n\n     /**\n      * Callback when opening a node (called by BaseNode). \n      *\n      * @method _openNode\n      * @param {Object} node The node that called this method.\n      * @protected\n     **/\n     p._openNode = function(node) {\n         // TODO: call debug here\n     }\n\n     /**\n      * Callback when ticking a node (called by BaseNode).\n      *\n      * @method _tickNode\n      * @param {Object} node The node that called this method.\n      * @protected\n     **/\n     p._tickNode = function(node) {\n         // TODO: call debug here\n     }\n\n     /**\n      * Callback when closing a node (called by BaseNode).\n      *\n      * @method _closeNode\n      * @param {Object} node The node that called this method.\n      * @protected\n     **/\n     p._closeNode = function(node) {\n         // TODO: call debug here\n         this._openNodes.pop();\n     }\n\n     /**\n      * Callback when exiting a node (called by BaseNode).\n      *\n      * @method _exitNode\n      * @param {Object} node The node that called this method.\n      * @protected\n     **/\n     p._exitNode = function(node) {\n         // TODO: call debug here\n     }\n\n b3.Tick = Tick;\n\n })();/**\n  * BehaviorTree\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * The BehaviorTree class, as the name implies, represents the Behavior Tree \n  * structure.\n  * \n  * There are two ways to construct a Behavior Tree: by manually setting the \n  * root node, or by loading it from a data structure (which can be loaded from \n  * a JSON). Both methods are shown in the examples below and better explained \n  * in the user guide.\n  *\n  * The tick method must be called periodically, in order to send the tick \n  * signal to all nodes in the tree, starting from the root. The method \n  * `BehaviorTree.tick` receives a target object and a blackboard as parameters.\n  * The target object can be anything: a game agent, a system, a DOM object, \n  * etc. This target is not used by any piece of Behavior3JS, i.e., the target\n  * object will only be used by custom nodes.\n  * \n  * The blackboard is obligatory and must be an instance of `Blackboard`. This \n  * requirement is necessary due to the fact that neither `BehaviorTree` or any \n  * node will store the execution variables in its own object (e.g., the BT does\n  * not store the target, information about opened nodes or number of times the \n  * tree was called). But because of this, you only need a single tree instance \n  * to control multiple (maybe hundreds) objects.\n  * \n  * Manual construction of a Behavior Tree\n  * --------------------------------------\n  * \n  *     var tree = new b3.BehaviorTree();\n  *  \n  *     tree.root = new b3.Sequence({children:[\n  *         new b3.Priority({children:[\n  *             new MyCustomNode(),\n  *             new MyCustomNode()\n  *         ]}),\n  *         ...\n  *     ]});\n  *     \n  * \n  * Loading a Behavior Tree from data structure\n  * -------------------------------------------\n  * \n  *     var tree = new b3.BehaviorTree();\n  *\n  *     tree.load({\n  *         'title'       : 'Behavior Tree title'\n  *         'description' : 'My description'\n  *         'root'        : 'node-id-1'\n  *         'nodes'       : {\n  *             'node-id-1' : {\n  *                 'name'        : 'Priority', // this is the node type\n  *                 'title'       : 'Root Node', \n  *                 'description' : 'Description', \n  *                 'children'    : ['node-id-2', 'node-id-3'], \n  *             },\n  *             ...\n  *         }\n  *     })\n  *     \n  *\n  * @class BehaviorTree\n **/\n var BehaviorTree = b3.Class();\n\n var p = BehaviorTree.prototype;\n\n     /**\n      * The tree id, must be unique. By default, created with `b3.createUUID`.\n      * \n      * @property id\n      * @type {String}\n      * @readOnly\n      */\n     \n     /**\n      * The tree title.\n      *\n      * @property title\n      * @type {String}\n      */\n     \n     /**\n      * Description of the tree.\n      *\n      * @property description\n      * @type {String}\n      */\n     \n     /**\n      * A dictionary with (key-value) properties. Useful to define custom \n      * variables in the visual editor.\n      *\n      * @property properties\n      * @type {Object}\n      */\n\n     /**\n      * The reference to the root node. Must be an instance of `b3.BaseNode`.\n      *\n      * @property root\n      * @type {BaseNode}\n      */\n\n     /**\n      * The reference to the debug instance.\n      *\n      * @property debug\n      * @type {Object}\n      */\n\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function() {\n         this.id          = b3.createUUID();\n         this.title       = 'The behavior tree';\n         this.description = 'Default description';\n         this.properties  = {};\n         this.root        = null;\n         this.debug       = null;\n     }\n\n     /**\n      * This method loads a Behavior Tree from a data structure, populating this\n      * object with the provided data. Notice that, the data structure must \n      * follow the format specified by Behavior3JS. Consult the guide to know \n      * more about this format.\n      *\n      * You probably want to use custom nodes in your BTs, thus, you need to \n      * provide the `names` object, in which this method can find the nodes by \n      * `names[NODE_NAME]`. This variable can be a namespace or a dictionary, \n      * as long as this method can find the node by its name, for example:\n      *\n      *     //json\n      *     ...\n      *     'node1': {\n      *       'name': MyCustomNode,\n      *       'title': ...\n      *     }\n      *     ...\n      *     \n      *     //code\n      *     var bt = new b3.BehaviorTree();\n      *     bt.load(data, {'MyCustomNode':MyCustomNode})\n      *     \n      * \n      * @method load\n      * @param {Object} data The data structure representing a Behavior Tree.\n      * @param {Object} [names] A namespace or dict containing custom nodes.\n     **/\n     p.load = function(data, names) {\n         names = names || {};\n\n         this.title       = data.title || this.title;\n         this.description = data.description || this.description;\n         this.properties  = data.properties || this.properties;\n\n         var nodes = {};\n         // Create the node list (without connection between them)\n         for (var id in data.nodes) {\n             var spec = data.nodes[id];\n\n             if (spec.name in names) {\n                 // Look for the name in custom nodes\n                 var cls = names[spec.name];\n             } else if (spec.name in b3) {\n                 // Look for the name in default nodes\n                 var cls = b3[spec.name];\n             } else {\n                 // Invalid node name\n                 throw EvalError('BehaviorTree.load: Invalid node name + \"'+\n                                  spec.name+'\".');\n             }\n\n             var node = new cls(spec.parameters);\n             node.id = spec.id || node.id;\n             node.title = spec.title || node.title;\n             node.description = spec.description || node.description;\n             node.properties = spec.properties || node.properties;\n             node.parameters = spec.parameters || node.parameters;\n\n             nodes[id] = node;\n         }\n\n         // Connect the nodes\n         for (var id in data.nodes) {\n             var spec = data.nodes[id];\n             var node = nodes[id];\n\n             if (node.category === b3.COMPOSITE && spec.children) {\n                 for (var i=0; i<spec.children.length; i++) {\n                     var cid = spec.children[i];\n                     node.children.push(nodes[cid]);\n                 }\n             } else if (node.category === b3.DECORATOR && spec.child) {\n                 node.child = nodes[spec.child];\n             }\n         }\n\n         this.root = nodes[data.root];\n     };\n\n     /**\n      * This method dump the current BT into a data structure.\n      *\n      * Note: This method does not record the current node parameters. Thus, \n      * it may not be compatible with load for now.\n      * \n      * @method dump\n      * @returns {Object} A data object representing this tree.\n     **/\n     p.dump = function() {\n         var data = {};\n\n         data.title       = this.title;\n         data.description = this.description;\n         data.root        = (this.root)? this.root.id:null;\n         data.properties  = this.properties;\n         data.nodes       = {};\n\n         if (!this.root) return data;\n\n         var stack = [this.root];\n         while (stack.length > 0) {\n             var node = stack.pop();\n\n             var spec = {};\n             spec.id = node.id;\n             spec.name = node.name;\n             spec.title = node.title;\n             spec.description = node.description;\n             spec.properties = node.properties;\n             spec.parameters = node.parameters;\n             \n             if (node.category === b3.COMPOSITE && node.children) {\n                 var children = []\n                 for (var i=node.children.length-1; i>=0; i--) {\n                     children.push(node.children[i].id);\n                     stack.push(node.children[i]);\n                 }\n                 spec.children = children;\n             } else if (node.category === b3.DECORATOR && node.child) {\n                 stack.push(node.child);\n                 spec.child = node.child.id;\n             }\n\n             data.nodes[node.id] = spec;\n         }\n\n         return data;\n     };\n\n     /**\n      * Propagates the tick signal through the tree, starting from the root.\n      * \n      * This method receives a target object of any type (Object, Array, \n      * DOMElement, whatever) and a `Blackboard` instance. The target object has\n      * no use at all for all Behavior3JS components, but surely is important \n      * for custom nodes. The blackboard instance is used by the tree and nodes \n      * to store execution variables (e.g., last node running) and is obligatory\n      * to be a `Blackboard` instance (or an object with the same interface).\n      * \n      * Internally, this method creates a Tick object, which will store the \n      * target and the blackboard objects.\n      * \n      * Note: BehaviorTree stores a list of open nodes from last tick, if these \n      * nodes weren't called after the current tick, this method will close them \n      * automatically.\n      * \n      * @method tick\n      * @param {Object} target A target object.\n      * @param {Blackboard} blackboard An instance of blackboard object.\n      * @returns {Constant} The tick signal state.\n     **/\n     p.tick = function(target, blackboard) {\n         if (!blackboard) {\n             throw 'The blackboard parameter is obligatory and must be an ' +\n                   'instance of b3.Blackboard';\n         }\n\n         /* CREATE A TICK OBJECT */\n         var tick = new b3.Tick();\n         tick.debug      = this.debug;\n         tick.target     = target;\n         tick.blackboard = blackboard;\n         tick.tree       = this;\n\n         /* TICK NODE */\n         var state = this.root._execute(tick);\n\n         /* CLOSE NODES FROM LAST TICK, IF NEEDED */\n         var lastOpenNodes = blackboard.get('openNodes', this.id);\n         var currOpenNodes = tick._openNodes.slice(0);\n\n         // does not close if it is still open in this tick\n         var start = 0;\n         for (var i=0; i<Math.min(lastOpenNodes.length, currOpenNodes.length); i++) {\n             start = i+1;\n             if (lastOpenNodes[i] !== currOpenNodes[i]) {\n                 break;\n             } \n         }\n\n         // close the nodes\n         for (var i=lastOpenNodes.length-1; i>=start; i--) {\n             lastOpenNodes[i]._close(tick);\n         }\n\n         /* POPULATE BLACKBOARD */\n         blackboard.set('openNodes', currOpenNodes, this.id);\n         blackboard.set('nodeCount', tick._nodeCount, this.id);\n\n         return state;\n     };\n    \n\n b3.BehaviorTree = BehaviorTree;\n\n })();/**\n  * BaseNode\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * The BaseNode class is used as super class to all nodes in BehaviorJS. It \n  * comprises all common variables and methods that a node must have to execute.\n  *\n  * **IMPORTANT:** Do not inherit from this class, use `b3.Composite`, \n  * `b3.Decorator`, `b3.Action` or `b3.Condition`, instead.\n  *\n  * The attributes are specially designed to serialization of the node in a JSON\n  * format. In special, the `parameters` attribute can be set into the visual \n  * editor (thus, in the JSON file), and it will be used as parameter on the \n  * node initialization at `BehaviorTree.load`.\n  * \n  * BaseNode also provide 5 callback methods, which the node implementations can\n  * override. They are `enter`, `open`, `tick`, `close` and `exit`. See their \n  * documentation to know more. These callbacks are called inside the `_execute`\n  * method, which is called in the tree traversal.\n  * \n  * @class BaseNode\n **/\n var BaseNode = b3.Class();\n\n var p = BaseNode.prototype;\n\n     /**\n      * Node ID.\n      *\n      * @property id\n      * @type {String}\n      * @readonly\n     **/\n\n     /**\n      * Node name. Must be a unique identifier, preferable the same name of the \n      * class. You have to set the node name in the prototype.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = null;\n\n     /**\n      * Node category. Must be `b3.COMPOSITE`, `b3.DECORATOR`, `b3.ACTION` or \n      * `b3.CONDITION`. This is defined automatically be inheriting the \n      * correspondent class.\n      *\n      * @property category\n      * @type constant\n      * @readonly\n     **/\n     p.category = null;\n\n     /**\n      * Node title.\n      *\n      * @property title\n      * @type {String}\n      * @optional\n      * @readonly\n     **/\n     p.title = null;\n\n     /**\n      * Node description.\n      *\n      * @property description\n      * @type {String}\n      * @optional\n      * @readonly\n     **/\n     p.description = null;\n\n     /**\n      * A dictionary (key, value) describing the node parameters. Useful for \n      * defining parameter values in the visual editor. Note: this is only \n      * useful for nodes when loading trees from JSON files.\n      *\n      * @property parameters\n      * @type {Object}\n      * @readonly\n     **/\n     p.parameters = null;\n\n     /**\n      * A dictionary (key, value) describing the node properties. Useful for \n      * defining custom variables inside the visual editor.\n      *\n      * @property properties\n      * @type {Object}\n      * @readonly\n     **/\n     p.properties = null;\n\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function() {\n         this.id          = b3.createUUID();\n         this.title       = this.title || this.name;\n         this.description = '';\n         this.parameters  = {};\n         this.properties  = {};\n     }\n\n     /**\n      * This is the main method to propagate the tick signal to this node. This \n      * method calls all callbacks: `enter`, `open`, `tick`, `close`, and \n      * `exit`. It only opens a node if it is not already open. In the same \n      * way, this method only close a node if the node  returned a status \n      * different of `b3.RUNNING`.\n      *\n      * @method _execute\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} The tick state.\n      * @protected\n     **/\n     p._execute = function(tick) {\n         /* ENTER */\n         this._enter(tick);\n\n         /* OPEN */\n         if (!tick.blackboard.get('isOpen', tick.tree.id, this.id)) {\n             this._open(tick);\n         }\n\n         /* TICK */\n         var status = this._tick(tick);\n\n         /* CLOSE */\n         if (status !== b3.RUNNING) {\n             this._close(tick);\n         }\n\n         /* EXIT */\n         this._exit(tick);\n\n         return status;\n     }\n\n     /**\n      * Wrapper for enter method.\n      *\n      * @method _enter\n      * @param {Tick} tick A tick instance.\n      * @protected\n     **/\n     p._enter = function(tick) {\n         tick._enterNode(this);\n         this.enter(tick);\n     }\n\n     /**\n      * Wrapper for open method.\n      *\n      * @method _open\n      * @param {Tick} tick A tick instance.\n      * @protected\n     **/\n     p._open  = function(tick) {\n         tick._openNode(this);\n         tick.blackboard.set('isOpen', true, tick.tree.id, this.id);\n         this.open(tick);\n     }\n\n     /**\n      * Wrapper for tick method.\n      *\n      * @method _tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n      * @protected\n     **/\n     p._tick  = function(tick) {\n         tick._tickNode(this);\n         return this.tick(tick);\n     }\n\n     /**\n      * Wrapper for close method.\n      *\n      * @method _close\n      * @param {Tick} tick A tick instance.\n      * @protected\n     **/\n     p._close = function(tick) {\n         tick._closeNode(this);\n         tick.blackboard.set('isOpen', false, tick.tree.id, this.id);\n         this.close(tick);\n     }\n\n     /**\n      * Wrapper for exit method.\n      *\n      * @method _exit\n      * @param {Tick} tick A tick instance.\n      * @protected\n     **/\n     p._exit  = function(tick) {\n         tick._exitNode(this);\n         this.exit(tick);\n     }\n\n     /**\n      * Enter method, override this to use. It is called every time a node is \n      * asked to execute, before the tick itself.\n      *\n      * @method enter\n      * @param {Tick} tick A tick instance.\n     **/\n     p.enter = function(tick) {}\n\n     /**\n      * Open method, override this to use. It is called only before the tick \n      * callback and only if the not isn't closed.\n      *\n      * Note: a node will be closed if it returned `b3.RUNNING` in the tick.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open  = function(tick) {}\n\n     /**\n      * Tick method, override this to use. This method must contain the real \n      * execution of node (perform a task, call children, etc.). It is called\n      * every time a node is asked to execute.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n     **/\n     p.tick  = function(tick) {}\n\n     /**\n      * Close method, override this to use. This method is called after the tick\n      * callback, and only if the tick return a state different from \n      * `b3.RUNNING`.\n      *\n      * @method close\n      * @param {Tick} tick A tick instance.\n     **/\n     p.close = function(tick) {}\n\n     /**\n      * Exit method, override this to use. Called every time in the end of the \n      * execution.\n      *\n      * @method exit\n      * @param {Tick} tick A tick instance.\n     **/\n     p.exit  = function(tick) {}\n     \n b3.BaseNode = BaseNode;\n\n })();/**\n  * Action\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Action is the base class for all action nodes. Thus, if you want to \n  * create new custom action nodes, you need to inherit from this class. \n  *\n  * For example, take a look at the Runner action:\n  * \n  *     var Runner = b3.Class(b3.Action);\n  *     var p = Runner.prototype;\n  *     \n  *         p.name = 'Runner';\n  *     \n  *         p.tick = function(tick) {\n  *             return b3.RUNNING;\n  *         }\n  *\n  * @class Action\n  * @extends BaseNode\n **/\n var Action = b3.Class(b3.BaseNode);\n\n var p = Action.prototype;\n\n     /**\n      * Node category. Default to `b3.ACTION`.\n      *\n      * @property category\n      * @type {String}\n      * @readonly\n     **/\n     p.category = b3.ACTION;\n\n     p.__BaseNode_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function() {\n         this.__BaseNode_initialize();\n     }\n\n b3.Action = Action;\n\n })();/**\n  * Composite\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Composite is the base class for all composite nodes. Thus, if you want to \n  * create new custom composite nodes, you need to inherit from this class. \n  * \n  * When creating composite nodes, you will need to propagate the tick signal to\n  * the children nodes manually. To do that, override the `tick` method and call \n  * the `_execute` method on all nodes. For instance, take a look at how the \n  * Sequence node inherit this class and how it call its children:\n  *\n  *\n  *     // Inherit from Composite, using the util function Class.\n  *     var Sequence = b3.Class(b3.Composite);\n  *     var p = Sequence.prototype;\n  *\n  *         // Remember to set the name of the node. \n  *         p.name = 'Sequence';\n  *         \n  *         // Override the tick function\n  *         p.tick = function(tick) {\n  *\n  *             // Iterates over the children\n  *             for (var i=0; i<this.children.length; i++) {\n  *\n  *                 // Propagate the tick\n  *                 var status = this.children[i]._execute(tick);\n  * \n  *                 if (status !== b3.SUCCESS) {\n  *                     return status;\n  *                 }\n  *             }\n  *\n  *             return b3.SUCCESS;\n  *         }\n  *\n  * @class Composite\n  * @extends BaseNode\n **/\n var Composite = b3.Class(b3.z);\n\n var p = Composite.prototype;\n\n     /**\n      * Node category. Default to `b3.COMPOSITE`.\n      *\n      * @property category\n      * @type {String}\n      * @readonly\n     **/\n     p.category = b3.COMPOSITE;\n\n     p.__BaseNode_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__BaseNode_initialize();\n\n         this.children = (settings.children || []).slice(0);\n     };\n\n b3.Composite = Composite;\n\n })();/**\n  * Decorator\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Decorator is the base class for all decorator nodes. Thus, if you want to \n  * create new custom decorator nodes, you need to inherit from this class. \n  * \n  * When creating decorator nodes, you will need to propagate the tick signal to\n  * the child node manually, just like the composite nodes. To do that, override\n  * the `tick` method and call the `_execute` method on the child node. For \n  * instance, take a look at how the Inverter node inherit this class and how it\n  * call its children:\n  *\n  *\n  *     // Inherit from Decorator, using the util function Class.\n  *     var Inverter = b3.Class(b3.Decorator);\n  *     var p = Inverter.prototype;\n  *     \n  *         // Remember to set the name of the node. \n  *         p.name = 'Inverter';\n  *     \n  *         // Override the tick function\n  *         p.tick = function(tick) {\n  *             if (!this.child) {\n  *                 return b3.ERROR;\n  *             }\n  *     \n  *             // Propagate the tick\n  *             var status = this.child._execute(tick);\n  *     \n  *             if (status == b3.SUCCESS)\n  *                 status = b3.FAILURE;\n  *             else if (status == b3.FAILURE)\n  *                 status = b3.SUCCESS;\n  *     \n  *             return status;\n  *         };\n  *\n  * @class Decorator\n  * @extends BaseNode\n **/\n var Decorator = b3.Class(b3.BaseNode);\n\n var p = Decorator.prototype;\n\n     /**\n      * Node category. Default to b3.DECORATOR.\n      *\n      * @property category\n      * @type {String}\n      * @readonly\n     **/\n     p.category = b3.DECORATOR;\n\n     p.__BaseNode_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__BaseNode_initialize();\n\n         this.child = settings.child || null;\n     };\n\n b3.Decorator = Decorator;\n\n })();/**\n  * Condition\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Condition is the base class for all condition nodes. Thus, if you want to \n  * create new custom condition nodes, you need to inherit from this class. \n  *\n  * @class Condition\n  * @extends BaseNode\n **/\n var Condition = b3.Class(b3.BaseNode);\n\n var p = Condition.prototype;\n\n     /**\n      * Node category. Default to `b3.CONDITION`.\n      *\n      * @property category\n      * @type {String}\n      * @readonly\n     **/\n     p.category = b3.CONDITION;\n\n     p.__BaseNode_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * @method initialize\n      * @constructor\n     **/\n     p.initialize = function() {\n         this.__BaseNode_initialize();\n     }\n\n b3.Condition = Condition;\n\n })();/**\n  * Sequence\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * The Sequence node ticks its children sequentially until one of them returns \n  * `FAILURE`, `RUNNING` or `ERROR`. If all children return the success state, \n  * the sequence also returns `SUCCESS`.\n  *\n  * @class Sequence\n  * @extends Composite\n **/\n var Sequence = b3.Class(b3.Composite);\n\n var p = Sequence.prototype;\n\n     /**\n      * Node name. Default to `Sequence`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Sequence';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         for (var i=0; i<this.children.length; i++) {\n             var status = this.children[i]._execute(tick);\n\n             if (status !== b3.SUCCESS) {\n                 return status;\n             }\n         }\n\n         return b3.SUCCESS;\n     }\n\n b3.Sequence = Sequence;\n\n })();/**\n  * Priority\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Priority ticks its children sequentially until one of them returns \n  * `SUCCESS`, `RUNNING` or `ERROR`. If all children return the failure state, \n  * the priority also returns `FAILURE`.\n  *\n  * @class Priority\n  * @extends Composite\n **/\n var Priority = b3.Class(b3.Composite);\n\n var p = Priority.prototype\n\n     /**\n      * Node name. Default to `Priority`.\n      *\n      * @property name\n      * @type String\n      * @readonly\n     **/\n     p.name = 'Priority';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         for (var i=0; i<this.children.length; i++) {\n             var status = this.children[i]._execute(tick);\n\n             if (status !== b3.FAILURE) {\n                 return status;\n             }\n         }\n\n         return b3.FAILURE;\n     }\n\n b3.Priority = Priority;\n\n })();/**\n  * MemSequence\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * MemSequence is similar to Sequence node, but when a child returns a \n  * `RUNNING` state, its index is recorded and in the next tick the MemPriority \n  * call the child recorded directly, without calling previous children again.\n  *\n  * @class MemPriority\n  * @extends Composite\n **/\n var MemSequence = b3.Class(b3.Composite);\n\n var p = MemSequence.prototype\n\n     /**\n      * Node name. Default to `MemSequence`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'MemSequence';\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {b3.Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         tick.blackboard.set('runningChild', 0, tick.tree.id, this.id);\n     }\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         var child = tick.blackboard.get('runningChild', tick.tree.id, this.id);\n         for (var i=child; i<this.children.length; i++) {\n             var status = this.children[i]._execute(tick);\n\n             if (status !== b3.SUCCESS) {\n                 if (status === b3.RUNNING) {\n                     tick.blackboard.set('runningChild', i, tick.tree.id, this.id);\n                 }\n                 return status;\n             }\n         }\n\n         return b3.SUCCESS;\n     }\n\n b3.MemSequence = MemSequence;\n\n })();/**\n  * MemPriority\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * MemPriority is similar to Priority node, but when a child returns a \n  * `RUNNING` state, its index is recorded and in the next tick the, MemPriority \n  * calls the child recorded directly, without calling previous children again.\n  *\n  * @class MemPriority\n  * @extends Composite\n **/\n var MemPriority = b3.Class(b3.Composite);\n\n var p = MemPriority.prototype;\n\n     /**\n      * Node name. Default to `MemPriority`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'MemPriority';\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {b3.Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         tick.blackboard.set('runningChild', 0, tick.tree.id, this.id);\n     }\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         var child = tick.blackboard.get('runningChild', tick.tree.id, this.id);\n         for (var i=child; i<this.children.length; i++) {\n             var status = this.children[i]._execute(tick);\n\n             if (status !== b3.FAILURE) {\n                 if (status === b3.RUNNING) {\n                     tick.blackboard.set('runningChild', i, tick.tree.id, this.id);\n                 }\n                 return status;\n             }\n         }\n\n         return b3.FAILURE;\n     }\n\n b3.MemPriority = MemPriority;\n\n })();/**\n  * Inverter\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * The Inverter decorator inverts the result of the child, returning `SUCCESS`\n  * for `FAILURE` and `FAILURE` for `SUCCESS`.\n  *\n  * @class Inverter\n  * @extends Decorator\n **/\n var Inverter = b3.Class(b3.Decorator);\n\n var p = Inverter.prototype;\n\n     /**\n      * Node name. Default to `Inverter`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Inverter';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         if (!this.child) {\n             return b3.ERROR;\n         }\n\n         var status = this.child._execute(tick);\n\n         if (status == b3.SUCCESS)\n             status = b3.FAILURE;\n         else if (status == b3.FAILURE)\n             status = b3.SUCCESS;\n\n         return status;\n     };\n\n b3.Inverter = Inverter;\n\n })();/**\n  * Limiter\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * This decorator limit the number of times its child can be called. After a\n  * certain number of times, the Limiter decorator returns `FAILURE` without \n  * executing the child.\n  *\n  * @class Limiter\n  * @extends Decorator\n **/\n var Limiter = b3.Class(b3.Decorator);\n\n var p = Limiter.prototype;\n\n     /**\n      * Node name. Default to `Limiter`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Limiter';\n\n     /**\n      * Node parameters.\n      *\n      * @property parameters\n      * @type {String}\n      * @readonly\n     **/\n     p.parameters = {'maxLoop': null};\n     \n     p.__Decorator_initialize = p.initialize;\n     /**\n      * Initialization method. \n      *\n      * Settings parameters:\n      *\n      * - **maxLoop** (*Integer*) Maximum number of repetitions.\n      * - **child** (*BaseNode*) The child node.\n      *\n      * @method initialize\n      * @param {Object} settings Object with parameters.\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__Decorator_initialize(settings);\n\n         if (!settings.maxLoop) {\n             throw \"maxLoop parameter in Limiter decorator is an obligatory \" +\n                   \"parameter\";\n         }\n\n         this.maxLoop = settings.maxLoop;\n     }\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         //[20170319]# 修复limiter因为返回success或failure而重置i\n         var i = tick.blackboard.get('i',tick.tree.id, this.id);\n         if(!i){\n             tick.blackboard.set('i', 0, tick.tree.id, this.id);\n         }\n     }\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         if (!this.child) {\n             return b3.ERROR;\n         }\n\n         var i = tick.blackboard.get('i', tick.tree.id, this.id);\n\n         if (i < this.maxLoop) {\n             var status = this.child._execute(tick);\n\n             if (status == b3.SUCCESS || status == b3.FAILURE)\n                 tick.blackboard.set('i', i+1, tick.tree.id, this.id);\n             \n             return status;\n         }\n\n         return b3.FAILURE;        \n     }\n\n b3.Limiter = Limiter;\n\n })();/**\n  * MaxTime\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * The MaxTime decorator limits the maximum time the node child can execute. \n  * Notice that it does not interrupt the execution itself (i.e., the child must\n  * be non-preemptive), it only interrupts the node after a `RUNNING` status.\n  *\n  * @class MaxTime\n  * @extends Decorator\n **/\n var MaxTime = b3.Class(b3.Decorator);\n\n var p = MaxTime.prototype;\n\n     /**\n      * Node name. Default to `MaxTime`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'MaxTime';\n\n     /**\n      * Node title. Default to `Max Time`.\n      *\n      * @property title\n      * @type {String}\n      * @readonly\n     **/\n     p.title = 'Max Time';\n\n     /**\n      * Node parameters.\n      *\n      * @property parameters\n      * @type {String}\n      * @readonly\n     **/\n     p.parameters = {'maxTime': null};\n\n     p.__Decorator_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * Settings parameters:\n      *\n      * - **maxTime** (*Integer*) Maximum time a child can execute.\n      * - **child** (*BaseNode*) The child node.\n      *\n      * @method initialize\n      * @param {Object} settings Object with parameters.\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__Decorator_initialize(settings);\n\n         if (!settings.maxTime) {\n             throw \"maxTime parameter in MaxTime decorator is an obligatory \" +\n                   \"parameter\";\n         }\n\n         this.maxTime = settings.maxTime;\n     };\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         var startTime = (new Date()).getTime();\n         tick.blackboard.set('startTime', startTime, tick.tree.id, this.id);\n     };\n     \n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         if (!this.child) {\n             return b3.ERROR;\n         }\n         \n         var currTime = (new Date()).getTime();\n         var startTime = tick.blackboard.get('startTime', tick.tree.id, this.id);\n         \n         var status = this.child._execute(tick);\n         if (currTime - startTime > this.maxTime) {\n             return b3.FAILURE;\n         }\n         \n         return status;\n     };\n\n b3.MaxTime = MaxTime;\n\n })();/**\n  * Repeater\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Repeater is a decorator that repeats the tick signal until the child node \n  * return `RUNNING` or `ERROR`. Optionally, a maximum number of repetitions \n  * can be defined.\n  *\n  * @class Repeater\n  * @extends Decorator\n **/\n var Repeater = b3.Class(b3.Decorator);\n\n var p = Repeater.prototype;\n\n     /**\n      * Node name. Default to `Repeater`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Repeater';\n\n     /**\n      * Node parameters.\n      *\n      * @property parameters\n      * @type {String}\n      * @readonly\n     **/\n     p.parameters = {'maxLoop': -1};\n\n     p.__Decorator_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * Settings parameters:\n      *\n      * - **maxLoop** (*Integer*) Maximum number of repetitions. Default to -1 \n      *                           (infinite).\n      * - **child** (*BaseNode*) The child node.\n      * \n      * @method initialize\n      * @param {Object} settings Object with parameters.\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__Decorator_initialize(settings);\n\n         this.maxLoop = settings.maxLoop || -1;\n     };\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         tick.blackboard.set('i', 0, tick.tree.id, this.id);\n     };\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n     **/\n     p.tick = function(tick) {\n         if (!this.child) {\n             return b3.ERROR;\n         }\n\n         var i = tick.blackboard.get('i', tick.tree.id, this.id);\n         var status = b3.SUCCESS;\n\n         while (this.maxLoop < 0 || i < this.maxLoop) {\n             status = this.child._execute(tick);\n\n             if (status == b3.SUCCESS || status == b3.FAILURE)\n                 i++;\n             else\n                 break;\n         }\n\n         i = tick.blackboard.set('i', i, tick.tree.id, this.id);\n         return status;\n     };\n\n b3.Repeater = Repeater;\n\n })();/**\n  * RepeatUntilFailure\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * RepeatUntilFailure is a decorator that repeats the tick signal until the \n  * node child returns `FAILURE`, `RUNNING` or `ERROR`. Optionally, a maximum \n  * number of repetitions can be defined.\n  *\n  * @class RepeatUntilFailure\n  * @extends Decorator\n **/\n var RepeatUntilFailure = b3.Class(b3.Decorator);\n\n var p = RepeatUntilFailure.prototype;\n\n     /**\n      * Node name. Default to `RepeatUntilFailure`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'RepeatUntilFailure';\n\n     /**\n      * Node title. Default to `Repeat Until Failure`.\n      *\n      * @property title\n      * @type {String}\n      * @readonly\n     **/\n     p.title = 'Repeat Until Failure';\n\n     /**\n      * Node parameters.\n      *\n      * @property parameters\n      * @type {String}\n      * @readonly\n     **/\n     p.parameters = {'maxLoop': -1};\n\n     p.__Decorator_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * Settings parameters:\n      *\n      * - **maxLoop** (*Integer*) Maximum number of repetitions. Default to -1 \n      *                           (infinite).\n      * - **child** (*BaseNode*) The child node.\n      *\n      * @method initialize\n      * @param {Object} settings Object with parameters.\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__Decorator_initialize(settings);\n\n         this.maxLoop = settings.maxLoop || -1;\n     }\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         tick.blackboard.set('i', 0, tick.tree.id, this.id);\n     }\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         if (!this.child) {\n             return b3.ERROR;\n         }\n\n         var i = tick.blackboard.get('i', tick.tree.id, this.id);\n\n         while (this.maxLoop < 0 || i < this.maxLoop) {\n             var status = this.child._execute(tick);\n\n             if (status == b3.SUCCESS)\n                 i++;\n             else\n                 break;\n         }\n\n         var i = tick.blackboard.set('i', i, tick.tree.id, this.id);\n         return status;\n     }\n\n b3.RepeatUntilFailure = RepeatUntilFailure;\n\n })();/**\n  * RepeatUntilSuccess\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * RepeatUntilSuccess is a decorator that repeats the tick signal until the \n  * node child returns `SUCCESS`, `RUNNING` or `ERROR`. Optionally, a maximum \n  * number of repetitions can be defined.\n  *\n  * @class RepeatUntilSuccess\n  * @extends Decorator\n **/\n var RepeatUntilSuccess = b3.Class(b3.Decorator);\n\n var p = RepeatUntilSuccess.prototype;\n\n     /**\n      * Node name. Default to `RepeatUntilSuccess`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'RepeatUntilSuccess';\n\n     /**\n      * Node title. Default to `Repeat Until Success`.\n      *\n      * @property title\n      * @type {String}\n      * @readonly\n     **/\n     p.title = 'Repeat Until Success';\n     \n     /**\n      * Node parameters.\n      *\n      * @property parameters\n      * @type {String}\n      * @readonly\n     **/\n     p.parameters = {'maxLoop': -1};\n     \n     p.__Decorator_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * Settings parameters:\n      *\n      * - **maxLoop** (*Integer*) Maximum number of repetitions. Default to -1 \n      *                           (infinite).\n      * - **child** (*BaseNode*) The child node.\n      *\n      * @method initialize\n      * @param {Object} settings Object with parameters.\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__Decorator_initialize(settings);\n\n         this.maxLoop = settings.maxLoop || -1;\n     }\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         tick.blackboard.set('i', 0, tick.tree.id, this.id);\n     }\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         if (!this.child) {\n             return b3.ERROR;\n         }\n\n         var i = tick.blackboard.get('i', tick.tree.id, this.id);\n\n         while (this.maxLoop < 0 || i < this.maxLoop) {\n             var status = this.child._execute(tick);\n\n             if (status == b3.FAILURE)\n                 i++;\n             else\n                 break;\n         }\n\n         var i = tick.blackboard.set('i', i, tick.tree.id, this.id);\n         return status;\n     }\n\n b3.RepeatUntilSuccess = RepeatUntilSuccess;\n\n })();/**\n  * Error\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * This action node returns `ERROR` always.\n  *\n  * @class Error\n  * @extends Action\n **/\n var Error = b3.Class(b3.Action);\n\n var p = Error.prototype;\n\n     /**\n      * Node name. Default to `Error`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Error';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} Always return `b3.ERROR`.\n     **/\n     p.tick = function(tick) {\n         return b3.ERROR;\n     }\n\n b3.Error = Error;\n\n })();/**\n  * Failer\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * This action node returns `FAILURE` always.\n  *\n  * @class Failer\n  * @extends Action\n **/\n var Failer = b3.Class(b3.Action);\n\n var p = Failer.prototype;\n\n     /**\n      * Node name. Default to `Failer`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Failer';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} Always return `b3.FAILURE`.\n     **/\n     p.tick = function(tick) {\n         return b3.FAILURE;\n     }\n\n b3.Failer = Failer;\n\n })();/**\n  * Runner\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * This action node returns RUNNING always.\n  *\n  * @class Runner\n  * @extends Action\n **/\n var Runner = b3.Class(b3.Action);\n\n var p = Runner.prototype;\n\n     /**\n      * Node name. Default to `Runner`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Runner';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} Always return `b3.RUNNING`.\n     **/\n     p.tick = function(tick) {\n         return b3.RUNNING;\n     }\n\n b3.Runner = Runner;\n\n })();/**\n  * Succeeder\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * This action node returns `SUCCESS` always.\n  *\n  * @class Succeeder\n  * @extends Action\n **/\n var Succeeder = b3.Class(b3.Action);\n\n var p = Succeeder.prototype;\n\n     /**\n      * Node name. Default to `Succeeder`.\n      *\n      * @property name\n      * @type String\n      * @readonly\n     **/\n     p.name = 'Succeeder';\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {b3.Tick} tick A tick instance.\n      * @returns {Constant} Always return `b3.SUCCESS`.\n     **/\n     p.tick = function(tick) {\n         return b3.SUCCESS;\n     }\n\n b3.Succeeder = Succeeder;\n\n })();/**\n  * Wait\n  *\n  * Copyright (c) 2014 Renato de Pontes Pereira.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to \n  * deal in the Software without restriction, including without limitation the \n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is \n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n **/\n\n /**\n  * @module Behavior3JS\n  **/\n\n // namespace:\n //this.b3 = this.b3 || {};\n\n (function() {\n \"use strict\";\n\n /**\n  * Wait a few seconds.\n  *\n  * @class Wait\n  * @extends Action\n **/\n var Wait = b3.Class(b3.Action);\n\n var p = Wait.prototype;\n     \n     /**\n      * Node name. Default to `Wait`.\n      *\n      * @property name\n      * @type {String}\n      * @readonly\n     **/\n     p.name = 'Wait';\n\n     /**\n      * Node parameters.\n      *\n      * @property parameters\n      * @type {String}\n      * @readonly\n     **/\n     p.parameters = {'milliseconds': 0};\n\n     p.__Action_initialize = p.initialize;\n     /**\n      * Initialization method.\n      *\n      * Settings parameters:\n      *\n      * - **milliseconds** (*Integer*) Maximum time, in milliseconds, a child\n      *                                can execute.\n      *\n      * @method initialize\n      * @param {Object} settings Object with parameters.\n      * @constructor\n     **/\n     p.initialize = function(settings) {\n         settings = settings || {};\n\n         this.__Action_initialize();\n\n         this.endTime = settings.milliseconds || 0;\n     }\n\n     /**\n      * Open method.\n      *\n      * @method open\n      * @param {Tick} tick A tick instance.\n     **/\n     p.open = function(tick) {\n         var startTime = (new Date()).getTime();\n         tick.blackboard.set('startTime', startTime, tick.tree.id, this.id);\n     }\n\n     /**\n      * Tick method.\n      *\n      * @method tick\n      * @param {Tick} tick A tick instance.\n      * @returns {Constant} A state constant.\n     **/\n     p.tick = function(tick) {\n         var currTime = (new Date()).getTime();\n         var startTime = tick.blackboard.get('startTime', tick.tree.id, this.id);\n         \n         if (currTime - startTime > this.endTime) {\n             return b3.SUCCESS;\n         }\n         \n         return b3.RUNNING;\n     }\n\n b3.Wait = Wait;\n\n })();\n\n module.exports = b3;\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n\n\n}, {});\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}