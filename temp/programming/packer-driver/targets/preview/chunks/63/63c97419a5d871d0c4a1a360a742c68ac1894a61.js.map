{"version":3,"sources":["file:///C:/Users/admin/NewProject_18/assets/Scripts/External/immer/core/scope.ts"],"names":["getCurrentScope","__DEV__","currentScope","createScope","parent_","immer_","drafts_","canAutoFreeze_","unfinalizedDrafts_","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","forEach","revokeDraft","enterScope","immer","draft","state","type_","revoke_","revoked_","DRAFT_STATE","ProxyTypeProxyObject","ProxyTypeProxyArray","getPlugin","die"],"mappings":";;;;;AA4BO,WAASA,eAAT,GAA2B;AACjC,QAAIC,OAAO,IAAI,CAACC,YAAhB,EAA8B;AAAA;AAAA,oBAAI,CAAJ;AAC9B,WAAOA,YAAP;AACA;;AAED,WAASC,WAAT,CACCC,OADD,EAECC,MAFD,EAGc;AACb,WAAO;AACNC,MAAAA,OAAO,EAAE,EADH;AAENF,MAAAA,OAFM;AAGNC,MAAAA,MAHM;AAIN;AACA;AACAE,MAAAA,cAAc,EAAE,IANV;AAONC,MAAAA,kBAAkB,EAAE;AAPd,KAAP;AASA;;AAEM,WAASC,iBAAT,CACNC,KADM,EAENC,aAFM,EAGL;AACD,QAAIA,aAAJ,EAAmB;AAClB;AAAA;AAAA,kCAAU,SAAV,EADkB,CACG;;AACrBD,MAAAA,KAAK,CAACE,QAAN,GAAiB,EAAjB;AACAF,MAAAA,KAAK,CAACG,eAAN,GAAwB,EAAxB;AACAH,MAAAA,KAAK,CAACI,cAAN,GAAuBH,aAAvB;AACA;AACD;;AAEM,WAASI,WAAT,CAAqBL,KAArB,EAAwC;AAC9CM,IAAAA,UAAU,CAACN,KAAD,CAAV;AACAA,IAAAA,KAAK,CAACJ,OAAN,CAAcW,OAAd,CAAsBC,WAAtB,EAF8C,CAG9C;;AACAR,IAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACA;;AAEM,WAASU,UAAT,CAAoBN,KAApB,EAAuC;AAC7C,QAAIA,KAAK,KAAKR,YAAd,EAA4B;AAC3BA,MAAAA,YAAY,GAAGQ,KAAK,CAACN,OAArB;AACA;AACD;;AAEM,WAASe,UAAT,CAAoBC,KAApB,EAAkC;AACxC,WAAQlB,YAAY,GAAGC,WAAW,CAACD,YAAD,EAAekB,KAAf,CAAlC;AACA;;AAED,WAASF,WAAT,CAAqBG,KAArB,EAAqC;AACpC,QAAMC,KAAiB,GAAGD,KAAK;AAAA;AAAA,mCAA/B;AACA,QACCC,KAAK,CAACC,KAAN;AAAA;AAAA,yDACAD,KAAK,CAACC,KAAN;AAAA;AAAA,mDAFD,EAICD,KAAK,CAACE,OAAN,GAJD,KAKKF,KAAK,CAACG,QAAN,GAAiB,IAAjB;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAzDezB,e;uBAoBAS,iB;iBAYAM,W;gBAOAC,U;gBAMAG;;;;;;;;;AApEfO,MAAAA,W,iBAAAA,W;AAEAC,MAAAA,oB,iBAAAA,oB;AACAC,MAAAA,mB,iBAAAA,mB;AACAC,MAAAA,S,iBAAAA,S;;AAEOC,MAAAA,G,iBAAAA,G","sourcesContent":["import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n"]}