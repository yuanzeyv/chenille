{"version":3,"sources":["file:///C:/Users/YzY/Documents/chenille-main/assets/Scripts/Prefab/BoxSpritePrefab.ts"],"names":["_decorator","Component","Sprite","SpriteFrame","resources","ccclass","property","BoxSpritePrefab","type","Number","displayName","tooltip","min","max","step","Boolean","CloseImage","OpenImage","FrontBoxType","FrontBoxStatus","start","IsChangeStatus","BoxStatus","ChangeStatus","IsChangeType","BoxType","ChangeType","load","err","frame","console","log","ImageSprite","spriteFrame","update","deltaTime","Array"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,M,OAAAA,M;AAAkBC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,S,OAAAA,S;;;;;;;;;OACrE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;iCAGjBO,e,WADZF,OAAO,CAAC,iBAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACC,MADC;AAENC,QAAAA,WAAW,EAAC,MAFN;AAGNC,QAAAA,OAAO,EAAC,UAHF;AAINC,QAAAA,GAAG,EAAC,CAJE;AAKNC,QAAAA,GAAG,EAAC,CALE;AAMNC,QAAAA,IAAI,EAAC;AANC,OAAD,C,UASRR,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACO,OADC;AAENL,QAAAA,WAAW,EAAC;AAFN,OAAD,C,UAKRJ,QAAQ,CAAC,CAACH,WAAD,CAAD,C,2BAlBb,MACaI,eADb,SACqCN,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAmB3Ce,UAnB2C,GAmBlB,IAnBkB;AAAA,eAoB3CC,SApB2C,GAoBnB,IApBmB;AAAA,eAsB3CC,YAtB2C,GAsBrB,CAtBqB;AAAA,eAuB3CC,cAvB2C,GAuBlB,IAvBkB;AAAA;;AAuBb;AAC9BC,QAAAA,KAAK,GAAG,CACP;;AACDC,QAAAA,cAAc,GAAE;AACZ,cAAG,KAAKF,cAAL,IAAuB,KAAKG,SAA/B,EAAyC;AACrC,iBAAKC,YAAL,GADqC,CACjB;AACvB;AACJ;;AACDC,QAAAA,YAAY,GAAE;AACV,cAAG,KAAKN,YAAL,IAAqB,KAAKO,OAA7B,EAAqC;AACjC,iBAAKC,UAAL,GADiC,CACf;;AAClB,iBAAKH,YAAL,GAFiC,CAEb;AACvB;AACJ;;AACDG,QAAAA,UAAU,GAAE;AACRtB,UAAAA,SAAS,CAACuB,IAAV,CAAe,eAAe,KAAKF,OAApB,GAA8B,cAA7C,EAA4DtB,WAA5D,EAAwE,CAACyB,GAAD,EAAKC,KAAL,KAAa;AACjF,gBAAGD,GAAH,EAAO;AACHE,cAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA;AACH;;AACD,iBAAKZ,UAAL,GAAkBa,KAAlB;AACH,WAND;AAOAzB,UAAAA,SAAS,CAACuB,IAAV,CAAe,cAAc,KAAKF,OAAnB,GAA6B,cAA5C,EAA2DtB,WAA3D,EAAuE,CAACyB,GAAD,EAAKC,KAAL,KAAa;AAChF,gBAAGD,GAAH,EAAO;AACHE,cAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA;AACH;;AACD,iBAAKX,SAAL,GAAiBY,KAAjB;AACH,WAND;AAOA,eAAKX,YAAL,GAAoB,KAAKO,OAAzB;AACH;;AACDF,QAAAA,YAAY,GAAE;AACV,eAAKS,WAAL,CAAiBC,WAAjB,GAA+B,KAAKX,SAAL,GAAiB,KAAKL,SAAtB,GAAkC,KAAKD,UAAtE;AACA,eAAKG,cAAL,GAAsB,KAAKG,SAA3B;AACH;;AACDY,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,eAAKX,YAAL;AACA,eAAKH,cAAL;AACH;;AA7D0C,O;;;;;iBAS1B,C;;;;;;;iBAEI,I;;;;;;;iBAKD,K;;;;;;;iBAEee,KAAK,E","sourcesContent":["import { _decorator, Component, Node, Sprite, CCObject, SpriteFrame, find, resources, Texture2D } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BoxSpritePrefab')\r\nexport class BoxSpritePrefab extends Component {\r\n    @property({\r\n        type:Number,    \r\n        displayName:\"图片类型\",\r\n        tooltip:\"用于显示宝箱图片\",\r\n        min:1,\r\n        max:4,\r\n        step:1,\r\n    })\r\n    BoxType:number = 1;\r\n    @property(Sprite)\r\n    ImageSprite:Sprite = null;  \r\n    @property({\r\n        type:Boolean,    \r\n        displayName:\"宝箱状态\",  \r\n    }) \r\n    BoxStatus:Boolean = false;//默认为关闭状态\r\n    @property([SpriteFrame])\r\n    SpriteFrameTypeArr:SpriteFrame[] = Array<SpriteFrame>();\r\n    CloseImage:SpriteFrame = null;\r\n    OpenImage:SpriteFrame = null;\r\n\r\n    FrontBoxType:number = 0;//前一帧盒子类型\r\n    FrontBoxStatus:Boolean = true;//前一帧盒子状态\r\n    start() { \r\n    }\r\n    IsChangeStatus(){\r\n        if(this.FrontBoxStatus != this.BoxStatus){\r\n            this.ChangeStatus();//改变一下当前的状态\r\n        }\r\n    }\r\n    IsChangeType(){ \r\n        if(this.FrontBoxType != this.BoxType){\r\n            this.ChangeType();//改变一下当前的类型\r\n            this.ChangeStatus();//改变一下当前的状态\r\n        }\r\n    }\r\n    ChangeType(){\r\n        resources.load(\"/BoxClose_\" + this.BoxType + \"/spriteFrame\",SpriteFrame,(err,frame)=>{\r\n            if(err){\r\n                console.log(err);\r\n                return;\r\n            }\r\n            this.CloseImage = frame;\r\n        });\r\n        resources.load(\"/BoxOpen_\" + this.BoxType + \"/spriteFrame\",SpriteFrame,(err,frame)=>{\r\n            if(err){\r\n                console.log(err);\r\n                return ;\r\n            }\r\n            this.OpenImage = frame;\r\n        }); \r\n        this.FrontBoxType = this.BoxType;\r\n    }\r\n    ChangeStatus(){ \r\n        this.ImageSprite.spriteFrame = this.BoxStatus ? this.OpenImage : this.CloseImage;\r\n        this.FrontBoxStatus = this.BoxStatus;\r\n    }\r\n    update(deltaTime: number) {\r\n        this.IsChangeType();\r\n        this.IsChangeStatus();\r\n    }\r\n}"]}