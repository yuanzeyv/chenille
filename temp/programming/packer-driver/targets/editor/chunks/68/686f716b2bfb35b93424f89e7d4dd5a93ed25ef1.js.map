{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAA6F,uCAA7F,EAA8L,uCAA9L,EAAkS,uCAAlS,EAA2Y,uCAA3Y,EAAqe,uCAAre,EAA8jB,uCAA9jB,EAA4pB,uCAA5pB,EAAwvB,uCAAxvB,EAAy1B,uCAAz1B,EAA66B,wCAA76B,EAAmgC,wCAAngC,EAA8lC,wCAA9lC,EAAsrC,wCAAtrC,EAAmxC,wCAAnxC,EAA22C,wCAA32C,EAAw8C,wCAAx8C,EAA4hD,wCAA5hD,EAAqnD,wCAArnD,EAA8sD,wCAA9sD,EAA4zD,wCAA5zD,EAA+6D,wCAA/6D,EAAgiE,wCAAhiE,EAAspE,wCAAtpE,EAAkwE,wCAAlwE,EAAm3E,wCAAn3E,EAA69E,wCAA79E,EAA4kF,wCAA5kF,EAAorF,wCAAprF,EAAiyF,wCAAjyF,EAAi4F,wCAAj4F,EAAs9F,wCAAt9F,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/BehaviorTree.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/BehaviorTree.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/BehaviorTreeImporter.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/BehaviorTreeImporter.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/BranchNode.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Decorator.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Decorator.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Introspector.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Introspector.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Node.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Random.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Random.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Selector.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Selector.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Sequence.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Sequence.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/Task.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/benchmark.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/constants.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/AlwaysFailDecorator.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/AlwaysFailDecorator.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/AlwaysSucceedDecorator.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/AlwaysSucceedDecorator.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/CooldownDecorator.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/CooldownDecorator.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/InvertDecorator.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/InvertDecorator.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/LoopDecorator.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/LoopDecorator.spec.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/decorators/index.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/External/Btree/index.js\"), () => import(\"file:///C:/Users/admin/NewProject_18/assets/Scripts/test.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}