{"version":3,"sources":["file:///C:/Users/admin/NewProject_18/assets/Scripts/External/immer/core/immerClass.ts"],"names":["Immer","createProxy","immer","value","parent","draft","proxyMap_","proxySet_","useProxies_","createES5Proxy_","scope","scope_","drafts_","push","markChanged","state","markChangedES5_","isDraftable","processResult","NOTHING","DRAFT_STATE","isDraft","isMap","isSet","markChangedProxy","createProxyProxy","freeze","getPlugin","die","hasProxies","isMinified","enterScope","revokeScope","leaveScope","usePatchesInScope","getCurrentScope","constructor","config","false","autoFreeze_","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","base","recipe","patchListener","defaultBase","self","curriedProduce","args","call","undefined","result","proxy","hasError","Promise","then","error","arg1","arg2","arg3","patches","inversePatches","nextState","p","ip","createDraft","isManual_","finishDraft","finalized_","applyPatches","i","length","patch","path","op","applyPatchesImpl","applyPatches_","slice"],"mappings":"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","sourcesContent":["import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tNOTHING,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tmarkChangedProxy,\n\tcreateProxyProxy,\n\tfreeze,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tisMinified,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\tfalse: boolean = false\n\n\tautoFreeze_: boolean = false ? true /* istanbul ignore next */ : !isMinified\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && draft[DRAFT_STATE]\n\t\tif (false) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (!hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n\nexport function markChanged(immer: Immer, state: ImmerState) {\n\tif (immer.useProxies_) {\n\t\tmarkChangedProxy(state)\n\t} else {\n\t\tgetPlugin(\"ES5\").markChangedES5_(state)\n\t}\n}\n"]}